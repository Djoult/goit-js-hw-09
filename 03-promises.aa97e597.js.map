{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBAiB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAxBPR,EAAKiB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBAIF,IAHA,IAAIX,EAAQY,SAASjB,EAAWkB,OAC1BC,EAAOF,SAAShB,EAAUiB,OAC1BE,EAASH,SAASf,EAAYgB,OAC3BG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGhB,GACdiB,MAAK,SAAAC,G,OAAUC,EAAA7B,GAAS8B,OAAOC,QAAQH,E,IACvCI,OAAM,SAAAC,G,OAASJ,EAAA7B,GAAS8B,OAAOI,QAAQD,E,IAC1CvB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayValue = document.querySelector('input[name=delay]');\nconst stepValue = document.querySelector('input[name=step]');\nconst amountValue = document.querySelector('input[name=amount]');\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  let delay = parseInt(delayValue.value);\n  const step = parseInt(stepValue.value);\n  const amount = parseInt(amountValue.value);\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    delay += step;\n  }\n  // form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","parseInt","value","step","amount","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.aa97e597.js.map"}